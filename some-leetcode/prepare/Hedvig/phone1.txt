http://collabedit.com/4y7bh


Given: An List<T> , comparator function/API

int compare(T t1, T t2) - black box

0 -> t1 and t2 are the same
+ -> t1 is better than t2
- -> t2 is better than t1

Required: Find the best element from the list


public T bestElement(List<T> objs) {
    T curMax = objs.get(0);
    for (int = 1; i < objs.size(); ++i) {
        if (compare(curMax, objs.get(i) < 0)) {
            curMax = objs.get(i);
        }
    }
    
    
    for(int i = 0; i < objs.size(); ++i) {
        if (compare(curMax, objs.get(i) < 0)) {
            //int temp = curMax;
            //curMax = objs.get(i);
            if (curMax != temp) {
                return null;
            }
        }
    }
    
    return curMax;
}

a -> b

Eg: 
list {a, b, c, d, r}

a ~ b
a ~ c
b ~ d => b is better than d
d ~ a
r ~ d 
r ~ all the elements

What is the best?


----------------------------------------------------------------


Given: An array of numbers
Required: Find minimum distance between two given numbers from the array

Eg: {8, 4, 5, 3, 6, 7, 3, 1, 9, 3}
     0  1  2  3  4  5  6  7  8  9
     
     a = 3, b = 9
     
     3 - 8 = 5
     6 - 8 = 2
     9 - 8 = 1 
     
     Min Dist = 1 
   
    
public class solution {
    public int minDistance(int[] nums, int a, int b) {
        if (nums.length == 0) {
            return 0;
        }
        
        int pos1 = Integer.MAX_VALUE, pos2 = Integer.MAX_VALUE;
        int dis = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length; ++i) {
            if (nums[i] == a) {
                pos1 = i;
                dis = Math.min(dis, Math.abs(pos1 - pos2));
            }
            else if (nums[i] == b) {
                pos2 = i;
                dis = Math.min(dis, Math.abs());
            }
        }
        
        return dis;
    }
}






